
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class AsianCityMoonGateNEWAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {1824, -1, 0, 0}, {1824, -1, 1, 0}, {1824, -1, 2, 0}// 1	2	3	
			, {1824, 0, 0, 0}, {1824, 0, 2, 0}, {1824, 1, 0, 0}// 4	6	7	
			, {1824, 1, 1, 0}, {1824, 1, 2, 0}, {1826, -1, 3, 0}// 8	9	10	
			, {1826, 0, 3, 0}, {1826, 1, 3, 0}, {1828, -1, -1, 0}// 11	12	13	
			, {1828, 0, -1, 0}, {1828, 1, -1, 0}, {1829, -2, 0, 0}// 14	15	16	
			, {1829, -2, 1, 0}, {1829, -2, 2, 0}, {9265, 0, 2, 5}// 17	18	19	
			, {9266, -1, 1, 5}, {9267, 0, 0, 5}, {9268, 1, 1, 5}// 20	21	22	
			, {9272, 0, 1, 5}, {9255, -1, 0, 5}, {9256, 1, 2, 5}// 23	24	25	
			, {9254, -1, 2, 5}, {9253, 1, 0, 5}, {1827, 2, 2, 0}// 26	27	28	
			, {1827, 2, 1, 0}, {1827, 2, 0, 0}, {6019, 2, -2, 5}// 29	30	31	
					};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new AsianCityMoonGateNEWAddonDeed();
			}
		}

		[ Constructable ]
		public AsianCityMoonGateNEWAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 1824, 0, 1, 0, 1, -1, "", 1);// 5

		}

		public AsianCityMoonGateNEWAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class AsianCityMoonGateNEWAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new AsianCityMoonGateNEWAddon();
			}
		}

		[Constructable]
		public AsianCityMoonGateNEWAddonDeed()
		{
			Name = "AsianCityMoonGateNEW";
		}

		public AsianCityMoonGateNEWAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}